<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lcyzh.nmerp.dao.TStockMapper">

    <resultMap id="tStockResultMap" type="com.lcyzh.nmerp.entity.TStock">
        <id column="id" property="id" jdbcType="BIGINT"/> 
        <result column="bar_code" property="barCode" jdbcType="VARCHAR"/>
        <result column="ord_code" property="ordCode" jdbcType="VARCHAR"/>
        <result column="order_item_id" property="orderItemId" jdbcType="BIGINT"/>
        <result column="item_code" property="itemCode" jdbcType="VARCHAR"/>
        <result column="item_lenth" property="itemLenth" jdbcType="DOUBLE"/> 
        <result column="item_width" property="itemWidth" jdbcType="DOUBLE"/> 
        <result column="item_thick" property="itemThick" jdbcType="DOUBLE"/> 
        <result column="item_weight" property="itemWeight" jdbcType="DOUBLE"/> 
        <result column="item_sq" property="itemSq" jdbcType="DOUBLE"/> 
        <result column="status" property="status" jdbcType="CHAR"/> 
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/> 
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/> 
        <result column="item_owner" property="itemOwner" jdbcType="VARCHAR"/> 
        <result column="item_yc_type" property="itemYcType" jdbcType="VARCHAR"/> 
        <result column="item_yb_type" property="itemYbType" jdbcType="VARCHAR"/> 
        <result column="item_cgy_code" property="itemCgyCode" jdbcType="BIGINT"/> 
        <result column="item_variety" property="itemVariety" jdbcType="BIGINT"/> 
        <result column="item_unit" property="itemUnit" jdbcType="BIGINT"/> 
        <result column="item_color" property="itemColor" jdbcType="VARCHAR"/>
        <result column="mac_code" property="macCode" jdbcType="VARCHAR"/>
        <result column="se_code" property="seCode" jdbcType="VARCHAR"/>
        <result column="item_price_type" property="itemPriceType" jdbcType="BIGINT"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>

    </resultMap>

    <select id="findByBarCode" parameterType="java.lang.String" resultType="com.lcyzh.nmerp.model.vo.StockVo">
        select
        id stockId,
        bar_code barCode,
        ord_code ordCode,
        order_item_id orderItemId,
        item_code itemCode,
        item_lenth itemLenth,
        item_width itemWidth,
        item_thick itemThick,
        item_weight itemWeight,
        item_sq itemSq,
        item_owner itemOwner,
        item_yc_type itemYcType,
        item_yb_type itemYbType,
        item_cgy_code itemCgyCode,
        item_variety itemVariety,
        item_unit itemUnit,
        item_color itemColor
        from t_stock
        where bar_code = #{barCode}
    </select>

    <update id="updateByOutCode" parameterType="java.util.Map">
        update t_stock set status = #{status,jdbcType=CHAR},update_time = #{updateTime,jdbcType=TIMESTAMP}
        where bar_code in (select bar_code from t_out_stock_detail where out_code = #{outCode})
    </update>
    <select id="getByBarCode" parameterType="java.lang.String" resultMap="tStockResultMap">
        select * from t_stock where bar_code = #{barCode}
    </select>

    <select id="findById" parameterType="java.lang.Long" resultMap="tStockResultMap">
        SELECT *
        FROM t_stock
        WHERE id = #{id,jdbcType=BIGINT}
    </select>

    <select id="findList" parameterType ="com.lcyzh.nmerp.model.vo.StockQueryVo"  resultType="com.lcyzh.nmerp.model.vo.StockQueryVo">
        select t.* from (

            SELECT
            s.id stockId,
            s.bar_code barCode,
            s.ord_code ordCode,
            o.ord_title orderTitle,
            s.item_code itemCode,
            s.item_lenth itemLenth,
            s.item_width itemWidth,
            s.item_thick itemThick,
            (s.item_weight - s.item_tare_weight) itemWeight,
            s.item_sq itemSq,
            s.item_owner itemOwner,
            s.item_yc_type itemYcType,
            s.item_yb_type itemYbType,
            s.item_cgy_code itemCgyCode,
            s.item_variety itemVariety,
            s.item_unit itemUnit,
            s.item_color itemColor,
            s.mac_code macCode,
            s.create_time createTime,
            case when (select count(1) from t_out_stock_detail where bar_code = s.bar_code) > 0 then '0'
            else '1' end outStatus
            FROM t_stock s
            left join t_order o on s.ord_code = o.ord_code
            inner join t_customer tc on tc.cus_code = o.cus_code
            <if test="cusName!= null and cusName != ''">
                and tc.cus_name like concat('%', #{cusName,jdbcType=VARCHAR}, '%')
            </if>

            <where>
                <if test="itemCgyCode!= null">
                    and s.item_cgy_code = #{itemCgyCode,jdbcType=BIGINT}
                </if>
                <if test="itemVariety!= null">
                    and s.item_variety = #{itemVariety,jdbcType=BIGINT}
                </if>
                <if test="ordCode!= null">
                    and s.ord_code like concat('%', #{ordCode,jdbcType=VARCHAR}, '%')
                </if>
                <if test="startDate!= null and startDate != ''">
                    and s.create_time &gt;= #{startDate}
                </if>
                <if test="endDate!= null and endDate != ''">
                    and s.create_time &lt;=  #{endDate}
                </if>
                <if test="itemOwner!= null and itemOwner != ''">
                    and s.item_owner like concat('%', #{itemOwner,jdbcType=VARCHAR}, '%')
                </if>
                <if test="orderTitle!= null">
                    and o.ord_title like concat('%', #{orderTitle,jdbcType=VARCHAR}, '%')
                </if>
                <if test="barCode!= null">
                    and s.bar_code like concat('%', #{barCode,jdbcType=VARCHAR}, '%')
                </if>
                <if test="barCode!= null">
                    and s.bar_code like concat('%', #{barCode,jdbcType=VARCHAR}, '%')
                </if>
            </where>
            order by s.create_time desc
        ) t  
         <where>
            <if test="outStatus!= null and outStatus != ''">
                t.outStatus = #{outStatus}
            </if>
         </where>
    </select>

    <insert id="insert" parameterType ="com.lcyzh.nmerp.entity.TStock" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_stock(
            bar_code,
            ord_code,
            order_item_id,
            item_code,
            item_lenth,
            item_width,
            item_thick,
            item_weight,
            item_sq,
            status,
            create_time,
            update_time,
            item_owner,
            item_yc_type,
            item_yb_type,
            item_cgy_code,
            item_variety,
            item_unit,
            item_color,
            mac_code,
            item_tare_weight,
            se_code,
            create_by,
            update_by
        )
        VALUES (
            #{barCode,jdbcType=VARCHAR},
            #{ordCode,jdbcType=VARCHAR},
            #{orderItemId,jdbcType=BIGINT},
            #{itemCode,jdbcType=VARCHAR},
            #{itemLenth,jdbcType=DOUBLE},
            #{itemWidth,jdbcType=DOUBLE},
            #{itemThick,jdbcType=DOUBLE},
            #{itemWeight,jdbcType=DOUBLE},
            #{itemSq,jdbcType=DOUBLE},
            #{status,jdbcType=CHAR},
            #{createTime,jdbcType=TIMESTAMP},
            #{updateTime,jdbcType=TIMESTAMP},
            #{itemOwner,jdbcType=VARCHAR},
            #{itemYcType,jdbcType=VARCHAR},
            #{itemYbType,jdbcType=VARCHAR},
            #{itemCgyCode,jdbcType=BIGINT},
            #{itemVariety,jdbcType=BIGINT},
            #{itemUnit,jdbcType=BIGINT},
            #{itemColor,jdbcType=VARCHAR},
            #{macCode,jdbcType=VARCHAR},
            #{itemTareWeight,jdbcType=DOUBLE},
            #{seCode,jdbcType=VARCHAR},
            #{createBy,jdbcType=VARCHAR},
            #{updateBy,jdbcType=VARCHAR}
        )
    </insert>

    <insert id="insertBatch" parameterType="com.lcyzh.nmerp.entity.TStock">
        INSERT INTO t_stock(
            id,
            bar_code,
            ord_code,
            order_item_id,
            item_code,
            item_lenth,
            item_width,
            item_thick,
            item_weight,
            item_sq,
            status,
            create_time,
            update_time,
            item_owner,
            item_yc_type,
            item_yb_type,
            item_cgy_code,
            item_variety,
            item_unit,
            item_color,
            mac_code,
            create_by,
            update_by
        )
        VALUES
        <foreach collection ="list" item="item" separator =",">
        (
            #{item.id,jdbcType=BIGINT},
            #{item.barCode,jdbcType=VARCHAR},
            #{item.ordCode,jdbcType=VARCHAR},
            #{item.orderItemId,jdbcType=BIGINT},
            #{item.itemCode,jdbcType=VARCHAR},
            #{item.itemLenth,jdbcType=DOUBLE},
            #{item.itemWidth,jdbcType=DOUBLE},
            #{item.itemThick,jdbcType=DOUBLE},
            #{item.itemWeight,jdbcType=DOUBLE},
            #{item.itemSq,jdbcType=DOUBLE},
            #{item.status,jdbcType=CHAR},
            #{item.createTime,jdbcType=TIMESTAMP},
            #{item.updateTime,jdbcType=TIMESTAMP},
            #{item.itemOwner,jdbcType=VARCHAR},
            #{item.itemYcType,jdbcType=VARCHAR},
            #{item.itemYbType,jdbcType=VARCHAR},
            #{item.itemCgyCode,jdbcType=BIGINT},
            #{item.itemVariety,jdbcType=BIGINT},
            #{item.itemUnit,jdbcType=BIGINT},
            #{item.itemColor,jdbcType=VARCHAR},
            #{item.macCode,jdbcType=VARCHAR},
            #{item.createBy,jdbcType=VARCHAR},
            #{item.updateBy,jdbcType=VARCHAR}
        )
        </foreach>
    </insert>

    <select id="findByOutCode" parameterType="java.lang.String" resultMap="tStockResultMap">
       SELECT
            s.bar_code,
            s.ord_code,
            s.order_item_id,
            s.item_code,
            s.item_lenth,
            s.item_width,
            tp.prod_thick AS item_thick,
            s.item_weight,
            s.item_sq,
            s.`status`,
            s.item_owner,
            s.item_yc_type,
            s.item_yb_type,
            tp.prod_variety as item_variety,
            tp.prod_cgy_code as item_cgy_code,
            tp.prod_color as item_color,
            s.mac_code,
            s.item_tare_weight,
            s.se_code,
	        tp.prod_price_type as item_price_type
        FROM
            t_out_stock_detail osd
            INNER JOIN t_stock s ON osd.bar_code = s.bar_code
            INNER JOIN t_product tp ON tp.prod_code = s.item_code
        where osd.out_code = #{outCode}
    </select>

    <update id="updateStock" parameterType="com.lcyzh.nmerp.entity.TStock">
        update t_stock set item_weight = #{itemWeight},update_by = #{updateBy} where id = #{id}
    </update>

</mapper>