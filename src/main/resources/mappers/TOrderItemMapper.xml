<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lcyzh.nmerp.dao.TOrderItemMapper">

    <resultMap id="tOrderItemResultMap" type="com.lcyzh.nmerp.entity.TOrderItem">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="ord_code" property="ordCode" jdbcType="VARCHAR"/>
        <result column="item_code" property="itemCode" jdbcType="VARCHAR"/>
        <result column="item_lenth" property="itemLenth" jdbcType="DOUBLE"/>
        <result column="item_width" property="itemWidth" jdbcType="DOUBLE"/>
        <result column="item_thick" property="itemThick" jdbcType="DOUBLE"/>
        <result column="item_color" property="itemColor" jdbcType="VARCHAR"/>
        <result column="item_num" property="itemNum" jdbcType="BIGINT"/>
        <result column="item_owner" property="itemOwner" jdbcType="VARCHAR"/>
        <result column="remarks" property="remarks" jdbcType="VARCHAR"/>
        <result column="item_price" property="itemPrice" jdbcType="DOUBLE"/>
        <result column="item_price_type" property="itemPriceType" jdbcType="BIGINT"/>
        <result column="item_weight" property="itemWeight" jdbcType="DOUBLE"/>
        <result column="item_total_weight" property="itemTotalWeight" jdbcType="DOUBLE"/>
        <result column="item_total_sq" property="itemTotalSq" jdbcType="DOUBLE"/>
        <result column="item_yb_type" property="itemYbType" jdbcType="VARCHAR"/>
        <result column="item_yc_type" property="itemYcType" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="item_status" property="itemStatus" jdbcType="BIGINT"/>
        <result column="item_out_num" property="itemOutNum" jdbcType="BIGINT"/>
        <result column="item_remarks" property="itemRemarks" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="get" parameterType="java.lang.Long" resultMap="tOrderItemResultMap">
        select * from T_ORDER_ITEM where id = #{id}
    </select>


    <select id="findByOrdCode" parameterType="java.lang.String" resultType="com.lcyzh.nmerp.model.vo.OrderItemVo">
       SELECT
        tt.prod_code itemCode,
        tt.prod_name itemName,
        tt.prod_cgy_code itemCgyCode,
        tt.prod_unit itemUnit,
        tt.prod_variety  itemVariety,
        toi.id itemId,
        toi.ord_code ordCode,
        toi.item_lenth itemLenth,
        toi.item_thick itemThick,
        toi.item_width itemWidth,
        toi.item_color itemColor,
        toi.item_num itemNum,
        toi.item_owner itemOwner,
        toi.remarks  remarks,
        toi.item_price itemPrice,
        toi.item_price_type itemPriceType,
        toi.item_weight itemWeight,
        toi.item_total_weight itemTotalWeight,
        toi.item_total_sq itemTotalSq,
        toi.item_yb_type itemYbType,
        toi.item_yc_type itemYcType,
        toi.item_status itemStatus,
        toi.item_out_num itemOutNum,
        toi.item_remarks itemRemarks,
        toi.create_time createTime,
        (select count(1) from t_stock where order_item_id = toi.id) as stockNum,
        (select sum(item_weight - item_tare_weight) from t_stock where order_item_id = toi.id) as totalStocktWeight
    FROM
        T_ORDER_ITEM toi
        LEFT JOIN T_PRODUCT tt ON toi.item_code = tt.prod_code
    WHERE
	toi.ord_code = #{ordCode,jdbcType=VARCHAR}
	order by toi.id
    </select>

    <select id="findByOrdCodeForPrint" parameterType="java.lang.String" resultType="com.lcyzh.nmerp.model.vo.OrderItemVo">
        SELECT
            tt.prod_code itemCode,
            tt.prod_name itemName,
            tt.prod_cgy_code itemCgyCode,
            tt.prod_unit itemUnit,
            tt.prod_variety  itemVariety,
            toi.ord_code ordCode,
            toi.item_lenth itemLenth,
            toi.item_thick itemThick,
            toi.item_width itemWidth,
            toi.item_color itemColor,
            sum(toi.item_num) itemNum,
            toi.item_owner itemOwner,
            toi.item_price itemPrice,
            toi.item_price_type itemPriceType,
            toi.item_yb_type itemYbType,
            toi.item_yc_type itemYcType,
            toi.item_status itemStatus
        FROM
            T_ORDER_ITEM toi
            LEFT JOIN T_PRODUCT tt ON toi.item_code = tt.prod_code
        WHERE toi.ord_code = #{ordCode,jdbcType=VARCHAR}
        group by tt.prod_code,tt.prod_name,tt.prod_cgy_code,tt.prod_unit,
        tt.prod_variety,toi.ord_code,toi.item_lenth,toi.item_thick, toi.item_width,
        toi.item_color,toi.item_owner,toi.item_price,toi.item_price_type,
        toi.item_yb_type,toi.item_yc_type,toi.item_status
    </select>


    <select id="findList" resultMap="tOrderItemResultMap">
        SELECT *
        FROM T_ORDER_ITEM
        <where>
        </where>
    </select>

    <select id="findAllList" resultMap="tOrderItemResultMap">
        SELECT *
        FROM T_ORDER_ITEM
    </select>

    <insert id="insert" parameterType="com.lcyzh.nmerp.entity.TOrderItem" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO T_ORDER_ITEM(
            ord_code,
            item_code,
            item_lenth,
            item_width,
            item_thick,
            item_color,
            item_num,
            item_owner,
            remarks,
            item_price,
            item_price_type,
            item_weight,
            item_total_weight,
            item_total_sq,
            item_yb_type,
            item_yc_type,
            create_time,
            item_status,
            item_out_num,
            item_remarks
        )
        VALUES (
            #{ordCode,jdbcType=VARCHAR},
            #{itemCode,jdbcType=VARCHAR},
            #{itemLenth,jdbcType=DOUBLE},
            #{itemWidth,jdbcType=DOUBLE},
            #{itemThick,jdbcType=DOUBLE},
            #{itemColor,jdbcType=VARCHAR},
            #{itemNum,jdbcType=BIGINT},
            #{itemOwner,jdbcType=VARCHAR},
            #{remarks,jdbcType=VARCHAR},
            #{itemPrice,jdbcType=DOUBLE},
            #{itemPriceType,jdbcType=BIGINT},
            #{itemWeight,jdbcType=DOUBLE},
            #{itemTotalWeight,jdbcType=DOUBLE},
            #{itemTotalSq,jdbcType=DOUBLE},
            #{itemYbType,jdbcType=VARCHAR},
            #{itemYcType,jdbcType=VARCHAR},
            #{createTime,jdbcType=TIMESTAMP},
            #{itemStatus,jdbcType=BIGINT},
            #{itemOutNum,jdbcType=BIGINT},
            #{itemRemarks,jdbcType=VARCHAR}
        )
    </insert>

    <insert id="insertBatch" parameterType="com.lcyzh.nmerp.entity.TOrderItem" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO T_ORDER_ITEM(
            ord_code,
            item_code,
            item_lenth,
            item_width,
            item_thick,
            item_color,
            item_num,
            item_owner,
            remarks,
            item_price,
            item_price_type,
            item_weight,
            item_total_weight,
            item_total_sq,
            item_yb_type,
            item_yc_type,
            create_time,
            item_status,
            item_out_num,
            item_remarks
            )
        VALUES
        <foreach collection="list" item="tOrderItem" separator=",">
            (
            #{tOrderItem.ordCode,jdbcType=VARCHAR},
            #{tOrderItem.itemCode,jdbcType=VARCHAR},
            #{tOrderItem.itemLenth,jdbcType=DOUBLE},
            #{tOrderItem.itemWidth,jdbcType=DOUBLE},
            #{tOrderItem.itemThick,jdbcType=DOUBLE},
            #{tOrderItem.itemColor,jdbcType=VARCHAR},
            #{tOrderItem.itemNum,jdbcType=BIGINT},
            #{tOrderItem.itemOwner,jdbcType=VARCHAR},
            #{tOrderItem.remarks,jdbcType=VARCHAR},
            #{tOrderItem.itemPrice,jdbcType=DOUBLE},
            #{tOrderItem.itemPriceType,jdbcType=BIGINT},
            #{tOrderItem.itemWeight,jdbcType=DOUBLE},
            #{tOrderItem.itemTotalWeight,jdbcType=DOUBLE},
            #{tOrderItem.itemTotalSq,jdbcType=DOUBLE},
            #{tOrderItem.itemYbType,jdbcType=VARCHAR},
            #{tOrderItem.itemYcType,jdbcType=VARCHAR},
            #{tOrderItem.createTime,jdbcType=TIMESTAMP},
            #{tOrderItem.itemStatus,jdbcType=BIGINT},
            #{tOrderItem.itemOutNum,jdbcType=BIGINT},
            #{tOrderItem.itemRemarks,jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <update id="update" parameterType="com.lcyzh.nmerp.entity.TOrderItem">
        UPDATE T_ORDER_ITEM
        <set>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="itemLenth != null">
                item_lenth = #{itemLenth,jdbcType=DOUBLE},
            </if>
            <if test="itemWidth != null">
                item_width = #{itemWidth,jdbcType=DOUBLE},
            </if>
            <if test="itemThick != null">
                item_thick = #{itemThick,jdbcType=DOUBLE},
            </if>
            <if test="itemColor != null">
                item_color = #{itemColor,jdbcType=VARCHAR},
            </if>
            <if test="itemNum != null">
                item_num = #{itemNum,jdbcType=BIGINT},
            </if>
            <if test="itemPrice != null">
                item_price = #{itemPrice,jdbcType=DOUBLE},
            </if>
            <if test="itemPriceType != null">
                item_price_type = #{itemPriceType,jdbcType=BIGINT},
            </if>
            <if test="itemWeight != null">
                item_weight = #{itemWeight,jdbcType=DOUBLE},
            </if>
            <if test="itemTotalWeight != null">
                item_total_weight = #{itemTotalWeight,jdbcType=DOUBLE},
            </if>
            <if test="itemTotalSq != null">
                item_total_sq = #{itemTotalSq,jdbcType=DOUBLE},
            </if>
            <if test="itemYbType != null">
                item_yb_type = #{itemYbType,jdbcType=VARCHAR},
            </if>
            <if test="itemYcType != null">
                item_yc_type = #{itemYcType,jdbcType=VARCHAR},
            </if>
            <if test="itemStatus != null">
                item_status = #{itemStatus,jdbcType=BIGINT},
            </if>
            <if test="itemOutNum != null">
                item_out_num = #{itemOutNum,jdbcType=BIGINT},
            </if>
            <if test="itemRemarks != null">
                item_remarks = #{itemRemarks,jdbcType=BIGINT},
            </if>
        </set>
        WHERE id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="delete" parameterType="com.lcyzh.nmerp.entity.TOrderItem">
        DELETE FROM T_ORDER_ITEM
        WHERE id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="deleteByOrdCode" parameterType="java.lang.String">
        DELETE FROM T_ORDER_ITEM
        WHERE ord_code = #{ordCode}
    </delete>
    <update id="updateProdStatusByOrdCode" parameterType="java.util.Map">
        update T_ORDER_ITEM set item_status = #{status} where ord_code = #{ordCode}
    </update>


    <select id="getOrderStockInfo" parameterType="java.lang.String" resultType="java.util.Map" >
        select
            count(d.ord_code) as totalNum,
            sum(d.item_weight) as totalwight,
            sum(d.item_sq) as totalSq,
            sum(d.wtPrice) as totalWtPrice,
            sum(d.sqPrice) as totalSqPrice,
            sum(d.price) as totalPrice
        from (
            SELECT
                t.ord_code,
                t.item_code,
                t.item_lenth,
                t.item_width,
                (t.item_weight-t.item_tare_weight) as item_weight,
                case
                when oi.item_price_type = 141002 then t.item_sq
                when oi.item_price_type = 141004 then t.item_sq
                when oi.item_price_type = 141006 then t.item_sq
                else 0 end as item_sq,
                oi.item_price_type,
                oi.item_price,
                case
                when oi.item_price_type = 141001 then (t.item_weight-t.item_tare_weight) * oi.item_price
                when oi.item_price_type = 141003 then (t.item_weight-t.item_tare_weight) * oi.item_price
                when oi.item_price_type = 141005 then (t.item_weight-t.item_tare_weight) * oi.item_price
                else 0 end as wtPrice,
                case
                when oi.item_price_type = 141002 then t.item_lenth * t.item_width * oi.item_price
                when oi.item_price_type = 141004 then t.item_lenth * t.item_width * oi.item_price
                when oi.item_price_type = 141006 then t.item_lenth * t.item_width * oi.item_price
                else 0 end as sqPrice,
                case
                when oi.item_price_type = 141001 then (t.item_weight-t.item_tare_weight) * oi.item_price
                when oi.item_price_type = 141003 then (t.item_weight-t.item_tare_weight) * oi.item_price
                when oi.item_price_type = 141005 then (t.item_weight-t.item_tare_weight) * oi.item_price
                when oi.item_price_type = 141002 then t.item_lenth * t.item_width * oi.item_price
                when oi.item_price_type = 141004 then t.item_lenth * t.item_width * oi.item_price
                when oi.item_price_type = 141006 then t.item_lenth * t.item_width * oi.item_price
                else 0 end as price
            FROM
                t_stock t
                INNER JOIN T_ORDER_ITEM oi ON oi.id = t.order_item_id
                AND oi.ord_code = t.ord_code
            WHERE
                t.ord_code = #{ordCode} and not EXISTS (select ts.bar_code from t_out_stock_detail ts where ts.bar_code = t.bar_code)
            order by oi.item_price_type,oi.id
            ) d
            GROUP BY d.ord_code
    </select>

    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM T_ORDER_ITEM
        WHERE id = #{id}
    </delete>

    <update id="updateNum" parameterType="com.lcyzh.nmerp.entity.TOrderItem">
        update T_ORDER_ITEM
        set item_num = item_num - #{itemNum}
        where id = #{id} and item_num &gt;= #{itemNum}
    </update>

    <select id="getOrderItemInfo" parameterType="java.lang.String" resultType="java.util.Map" >
        select sum(p.sqPrice) price from (
            SELECT
                CASE
                    WHEN oi.item_price_type = 141002 THEN
                    oi.item_lenth * oi.item_width * oi.item_price * oi.item_num
                    WHEN oi.item_price_type = 141004 THEN
                    oi.item_lenth * oi.item_width * oi.item_price * oi.item_num
                    WHEN oi.item_price_type = 141006 THEN
                    oi.item_lenth * oi.item_width * oi.item_price  * oi.item_num
                    ELSE 0
                    END AS sqPrice
            FROM
                t_order t
                INNER JOIN t_order_item oi ON t.ord_code = oi.ord_code
            WHERE
                t.ord_code =  #{ordCode}
        ) p


    </select>

    <update id="updateBatch" parameterType="java.util.List">
        update T_ORDER_ITEM
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="item_price =case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    <if test="i.itemPrice!=null">
                        when id = #{i.id} then  #{i.itemPrice}
                    </if>
                </foreach>
            </trim>
        </trim>
        where
        <foreach collection="list" separator="or" item="i" index="index">
            id = #{i.id}
        </foreach>
    </update>

</mapper>