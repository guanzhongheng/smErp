<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lcyzh.nmerp.dao.TSysUserMapper">

    <sql id="userColumns">
        a.id,
        a.login_name,
        a.password,
        a.no,
        a.name,
        a.email,
        a.phone,
        a.mobile,
        a.user_type,
        a.login_ip,
        a.login_date,
        a.remarks,
        a.login_flag,
        a.photo,
        a.create_by AS "createBy.id",
        a.create_date,
        a.update_by AS "updateBy.id",
        a.update_date,
        a.del_flag
    </sql>

    <!-- 根据编号获得用户 -->
    <select id="get" resultType="com.lcyzh.nmerp.entity.sys.User">
        SELECT
        <include refid="userColumns"/>
        FROM t_sys_user a
        
        WHERE a.id = #{id}
    </select>

    <!-- 根据登录名查询用户 -->
    <select id="getByLoginName" resultType="com.lcyzh.nmerp.entity.sys.User" parameterType="com.lcyzh.nmerp.entity.sys.User">
        SELECT
        <include refid="userColumns"/>
        FROM t_sys_user a
        
        WHERE a.login_name = #{loginName} AND a.del_flag = #{DEL_FLAG_NORMAL}
    </select>

    <!-- 分页查询用户信息 -->
    <select id="findList" resultType="com.lcyzh.nmerp.entity.sys.User">
        SELECT
        <include refid="userColumns"/>
        FROM t_sys_user a
        
        <if test="role != null and role.id != null and role.id != ''">
            JOIN t_sys_user_role ur ON ur.user_id = a.id AND ur.role_id = #{role.id}
        </if>
        WHERE a.del_flag = #{DEL_FLAG_NORMAL}
       
        <!-- 如果不是超级管理员，则不显示超级管理员用户 -->
        <if test="!currentUser.admin">
            AND a.id != '1'
        </if>
        <if test="loginName != null and loginName != ''">
            AND a.login_name like
            <if test="dbName == 'oracle'">'%'||#{loginName}||'%'</if>
            <if test="dbName == 'mssql'">'%'+#{loginName}+'%'</if>
            <if test="dbName == 'mysql'">CONCAT('%', #{loginName}, '%')</if>
        </if>
        <if test="name != null and name != ''">
            AND a.name like
            <if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
            <if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
            <if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
        </if>
        <!-- 数据范围过滤 -->
        ${sqlMap.dsf}
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY c.code, o.code, a.name
            </otherwise>
        </choose>
    </select>

    <!-- 根据OfficeId获取用户（树查询用户时用） -->
    <select id="findUserByOfficeId" resultType="com.lcyzh.nmerp.entity.sys.User" useCache="true">
		SELECT
			a.id, a.name, a.login_name
		FROM t_sys_user a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
			AND a.office_id = #{office.id}
		ORDER BY a.name
	</select>

    <!-- 查询全部用户 -->
    <select id="findAllList" resultType="com.lcyzh.nmerp.entity.sys.User">
        SELECT
        <include refid="userColumns"/>
        FROM t_sys_user a
        WHERE a.del_flag = #{DEL_FLAG_NORMAL}
        ORDER BY  a.name
    </select>

    <!-- 查询全部用户数目 -->
    <select id="findAllCount" resultType="long">
		SELECT
			COUNT(1)
		FROM t_sys_user a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
	</select>

    <!-- 插入用户 -->
    <insert id="insert">
		INSERT INTO t_sys_user(
			id, 
			login_name, 
			password, 
			no, 
			name, 
			email, 
			phone, 
			mobile, 
			user_type, 
			create_by, 
			create_date, 
			update_by, 
			update_date, 
			remarks, 
			login_flag, 
			photo, 
			del_flag
		) VALUES (
			#{id}, 
			#{loginName}, 
			#{password}, 
			#{no}, 
			#{name}, 
			#{email}, 
			#{phone}, 
			#{mobile}, 
			#{userType}, 
			#{createBy.id}, 
			#{createDate}, 
			#{updateBy.id}, 
			#{updateDate}, 
			#{remarks}, 
			#{loginFlag}, 
			#{photo}, 
			#{delFlag}
		)
	</insert>

    <!-- 更新用户 -->
    <update id="update">
		UPDATE t_sys_user SET
			login_name = #{loginName}, 
			password = #{password}, 
			no = #{no}, 
			name = #{name}, 
			email = #{email}, 
			phone = #{phone}, 
			mobile = #{mobile}, 
			user_type = #{userType}, 
			update_by = #{updateBy.id}, 
			update_date = #{updateDate}, 
			remarks = #{remarks},
			login_flag = #{loginFlag},
			photo = #{photo}
		WHERE id = #{id}
	</update>

    <!-- 删除用户和角色关联表数据 -->
    <delete id="deleteUserRole">
		DELETE FROM t_sys_user_role WHERE user_id = #{id}
	</delete>

    <!-- 插入用户和角色关联表数据 -->
    <insert id="insertUserRole">
        INSERT INTO t_sys_user_role(user_id, role_id)
        <foreach collection="roleList" item="role" separator=" union all ">
            SELECT #{id}, #{role.id}
            <if test="dbName != 'mssql'">
                FROM dual
            </if>
        </foreach>
    </insert>

    <!-- 更新用户信息  -->
    <update id="updateUserInfo">
		UPDATE t_sys_user SET
			email = #{email}, 
			phone = #{phone}, 
			mobile = #{mobile}, 
			update_by = #{updateBy.id}, 
			update_date = #{updateDate}, 
			remarks = #{remarks},
			photo = #{photo}
		WHERE id = #{id}
	</update>

    <!-- 更新用户密码 -->
    <update id="updatePasswordById">
		UPDATE t_sys_user SET
			password = #{password} 
		WHERE id = #{id}
	</update>

    <!-- 更新登录信息，如登录IP、登录时间 -->
    <update id="updateLoginInfo">
		UPDATE t_sys_user SET
			login_ip = #{loginIp}, 
			login_Date = #{loginDate} 
		WHERE id = #{id}
	</update>

    <!-- 逻辑删除用户 -->
    <update id="delete">
		UPDATE t_sys_user SET
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>


</mapper>