<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lcyzh.nmerp.dao.TOutStockDetailMapper">

    <resultMap id="tOutStockDetailResultMap" type="com.lcyzh.nmerp.entity.TOutStockDetail">
        <id column="id" property="id" jdbcType="BIGINT"/> 
        <result column="out_code" property="outCode" jdbcType="VARCHAR"/> 
        <result column="bar_code" property="barCode" jdbcType="VARCHAR"/> 

    </resultMap>
    <select id="findByBarCode" parameterType="java.lang.String" resultMap="tOutStockDetailResultMap">
        select * from t_out_stock_detail where bar_code = #{barCode}
    </select>
    <select id="findOutItemsByOutCode" parameterType="java.lang.String" resultType="com.lcyzh.nmerp.model.vo.OutStockDetailVo">
        select
        osd.id outStockDetailId,
        osd.out_code outCode,
        s.id stockId,
        s.ord_code ordCode,
		o.ord_title ordTitle,
		o.cus_code cusCode,
        s.bar_code barCode,
        s.item_code itemCode,
        s.item_lenth itemLenth,
        s.item_width itemWidth,
        s.item_thick itemThick,
        s.item_weight itemWeight,
        s.item_sq itemSq,
        s.item_owner itemOwner,
        s.item_yc_type itemYcType,
        s.item_yb_type itemYbType,
        s.item_cgy_code itemCgyCode,
        s.item_variety itemVariety,
        s.item_unit itemUnit,
        s.item_color itemColor
        from t_out_stock_detail osd
        left join t_stock s on osd.bar_code = s.bar_code
		inner join T_ORDER o on o.ord_code = s.ord_code
        where osd.out_code = #{outCode}
        order by osd.id desc
    </select>

    <delete id="deleteByOutCode" parameterType="java.lang.String">
        delete from t_out_stock_detail where out_code = #{outCode}
    </delete>

    <delete id="deleteByBarCode" parameterType="java.lang.String">
        delete from t_out_stock_detail where bar_code = #{barCode}
    </delete>


    <select id="findById" parameterType="java.lang.Long" resultMap="tOutStockDetailResultMap">
        SELECT *
        FROM t_out_stock_detail
        WHERE id = #{id,jdbcType=BIGINT}
    </select>

    <select id="findList" parameterType ="com.lcyzh.nmerp.entity.TOutStockDetail"  resultMap="tOutStockDetailResultMap">
        SELECT *
        FROM t_out_stock_detail
        <where>
            <if test="outCode!= null">
            and out_code = #{outCode,jdbcType=VARCHAR}
            </if>
            <if test="barCode!= null">
            and bar_code = #{barCode,jdbcType=VARCHAR}
            </if>
        </where>
    </select>

    <select id="findAllList" resultMap="tOutStockDetailResultMap">
        SELECT *
        FROM t_out_stock_detail
    </select>

    <insert id="insert" parameterType ="com.lcyzh.nmerp.entity.TOutStockDetail" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_out_stock_detail(
            out_code,
            bar_code
        )
        VALUES (
            #{outCode,jdbcType=VARCHAR},
            #{barCode,jdbcType=VARCHAR}
        )
    </insert>

    <insert id="insertBatch" parameterType="com.lcyzh.nmerp.entity.TOutStockDetail">
        INSERT INTO t_out_stock_detail(
            id,
            out_code,
            bar_code
        )
        VALUES
        <foreach collection ="list" item="item" separator =",">
        (
            #{item.id,jdbcType=BIGINT},
            #{item.outCode,jdbcType=VARCHAR},
            #{item.barCode,jdbcType=VARCHAR}
        )
        </foreach>
    </insert>

    <update id="update"  parameterType ="com.lcyzh.nmerp.entity.TOutStockDetail">
        UPDATE t_out_stock_detail
        <set>
            <if test="outCode!= null">
            out_code = #{outCode,jdbcType=VARCHAR},
            </if>
            <if test="barCode!= null">
            bar_code = #{barCode,jdbcType=VARCHAR},
            </if>
        </set>
        WHERE id = #{id,jdbcType=BIGINT}
    </update>

    <select id="getOutStockDetailInfos" parameterType="java.lang.String" resultType="com.lcyzh.nmerp.model.vo.OutStockDetailVo">
       SELECT
            tr.ord_title as ordTitle,
            tr.ord_code as ordCode,
            ts.bar_code as barCode,
            ts.item_variety as itemVariety,
            ts.item_cgy_code as itemCgyCode,
            ti.item_owner as itemOwner,
            ts.item_color as itemColor,
            ts.item_lenth as itemLenth,
            ts.item_width as itemWidth,
            ts.item_thick as itemThick,
            ts.item_weight as itemWeight,
            ti.item_price as itemPrice,
            case when ti.item_price_type = 141001 then ti.item_price * ts.item_weight
                 when ti.item_price_type = 141003 then ti.item_price * ts.item_weight
                 when ti.item_price_type = 141005 then ti.item_price * ts.item_weight
                 when ti.item_price_type = 141002 then ti.item_price * ts.item_lenth * ts.item_width
                 when ti.item_price_type = 141004 then ti.item_price * ts.item_lenth * ts.item_width
                 when ti.item_price_type = 141006 then ti.item_price * ts.item_lenth * ts.item_width
                 else 0 end price,
            ti.item_price_type as itemPriceType
        FROM
            t_out_stock_detail td
            INNER JOIN t_stock ts ON ts.bar_code = td.bar_code
            INNER JOIN t_order_item ti ON ti.id = ts.order_item_id
            inner join t_order tr on tr.ord_code = ts.ord_code
        where td.out_code = #{outCode}
        order by ts.item_variety,ts.item_lenth,ts.item_weight
    </select>

</mapper>